-- 2.
-- U zavisnosti od grupe uslovi se malo modifikuju
WITH TMP AS (
	SELECT D.IDPROGRAMA, 
		AVG(CASE WHEN DATDIPLOMIRANJA IS NULL THEN I.OCENA*1.0 ELSE NULL END) BEZ_DIPLOME,
		AVG(CASE WHEN DATDIPLOMIRANJA IS NOT NULL THEN I.OCENA*1.0 ELSE NULL END) DIPLOMIRANI, SP.NAZIV NAZIV
	FROM DA.DOSIJE D JOIN DA.ISPIT I	
			ON D.INDEKS=I.INDEKS AND I.OCENA>5 AND I.STATUS='o'
		JOIN DA.STUDIJSKIPROGRAM SP
			ON SP.ID=D.IDPROGRAMA	
	GROUP BY D.IDPROGRAMA, SP.NAZIV
)
SELECT D.INDEKS,  avg(ocena*1.0), CASE
	WHEN AVG(OCENA*1.0) > TMP.BEZ_DIPLOME THEN 'Diplomirao sa visokim prosekom'
	ELSE 'Na smeru ' || TMP.NAZIV || ' je bolji prosek' END
FROM TMP JOIN DA.DOSIJE D
		ON D.IDPROGRAMA=TMP.IDPROGRAMA
	JOIN DA.ISPIT I
		ON I.INDEKS=D.INDEKS AND I.OCENA>5 AND I.STATUS='o'
WHERE D.DATDIPLOMIRANJA IS NOT NULL
GROUP BY D.INDEKS, TMP.BEZ_DIPLOME, TMP.DIPLOMIRANI, D.IME, D.PREZIME, TMP.NAZIV
HAVING AVG(I.OCENA*1.0) NOT BETWEEN 7.5 AND 9.0
UNION
SELECT D.INDEKS, COALESCE(AVG(OCENA*1.0), 5.0), count(*) || '' ||
 CASE 
	WHEN AVG(OCENA) IS NULL THEN 'Jos nema ispita'
	WHEN AVG(OCENA*1.0)>TMP.BEZ_DIPLOME THEN 'Odlicno za sad' 
	ELSE 'Moze to bolje' END
FROM TMP JOIN DA.DOSIJE D
		ON D.IDPROGRAMA=TMP.IDPROGRAMA
	LEFT JOIN DA.ISPIT I
		ON I.INDEKS=D.INDEKS AND I.OCENA>5 AND I.STATUS='o'
WHERE D.DATDIPLOMIRANJA IS NULL
GROUP BY D.INDEKS, TMP.BEZ_DIPLOME, TMP.DIPLOMIRANI, D.IME, D.PREZIME
HAVING COUNT(I.OCENA) IN (0,2,3,5,7,9) --<10
;


-- 3.

-- a
CREATE TABLE STUDENT_MENTOR (
	STUDENT INTEGER NOT NULL PRIMARY KEY,
	MENTOR INTEGER,
	DATPOCETKA DATE,
	KOMENTAR VARCHAR(200),
	foreign key fk (mentor) references da.dosije
);


-- b

CREATE FUNCTION GENERISI_KOMENTAR(I INTEGER)
RETURNS VARCHAR(200)
RETURN 
	CASE WHEN I IN (SELECT INDEKS FROM DA.DOSIJE WHERE DATDIPLOMIRANJA IS NOT NULL) THEN
		(SELECT IME || ' ' || PREZIME || ' je diplomirao sa prosekom '
			|| DECIMAL(AVG(OCENA*1.0), 4, 2)
		FROM DA.DOSIJE D 
			JOIN DA.ISPIT I
				ON I.INDEKS=D.INDEKS AND OCENA>5 AND STATUS='o'
		WHERE I.INDEKS=I
		GROUP BY IME, PREZIME, D.INDEKS)
	ELSE '-'
	END
	;


VALUES GENERISI_KOMENTAR(20150001);
VALUES GENERISI_KOMENTAR(20150090);
VALUES GENERISI_KOMENTAR(1);


-- ii
CREATE FUNCTION GENERISI_KOMENTAR(I INTEGER)
RETURNS VARCHAR(200)
RETURN 
	CASE WHEN I IN (SELECT INDEKS FROM DA.DOSIJE WHERE DATDIPLOMIRANJA IS NOT NULL) THEN
		(SELECT  CASE WHEN POL='m' THEN 'Student ' ELSE 'Studentkinja ' END || IME || ' ' || PREZIME || ' ima zvanje '
			|| SP.ZVANJE
		FROM DA.DOSIJE D JOIN DA.STUDIJSKIPROGRAM SP
			ON D.IDPROGRAMA=SP.ID
		WHERE INDEKS=I)
	ELSE 'Student ne postoji ili nije diplomirao'
	END
	;

-- c
INSERT INTO STUDENT_MENTOR(STUDENT, MENTOR, DATPOCETKA)
WITH TMP AS(
	SELECT IDPROGRAMA, SP.NAZIV SMER, MIN(INDEKS) MENTOR
	FROM DA.DOSIJE D JOIN DA.STUDIJSKIPROGRAM SP
		ON SP.ID=D.IDPROGRAMA AND SP.IDNIVOA=2
	WHERE DATDIPLOMIRANJA IS NOT NULL
	GROUP BY IDPROGRAMA, SP.NAZIV
)
SELECT D.INDEKS, TMP.MENTOR, current date - 1 day
FROM DA.DOSIJE D JOIN DA.STUDIJSKIPROGRAM SP
		ON D.IDPROGRAMA=SP.ID 
	JOIN TMP
		ON SP.NAZIV=TMP.SMER 
WHERE D.DATDIPLOMIRANJA IS NULL AND SP.IDNIVOA=1;

INSERT INTO STUDENT_MENTOR(STUDENT, MENTOR, DATPOCETKA)
WITH TMP AS(
	SELECT IDPROGRAMA, SP.NAZIV SMER, MIN(INDEKS) MENTOR
	FROM DA.DOSIJE D JOIN DA.STUDIJSKIPROGRAM SP
		ON SP.ID=D.IDPROGRAMA AND SP.IDNIVOA=3
	WHERE DATDIPLOMIRANJA IS NOT NULL
	GROUP BY IDPROGRAMA, SP.NAZIV
)
SELECT D.INDEKS, TMP.MENTOR, current date + 1 day
FROM DA.DOSIJE D JOIN DA.STUDIJSKIPROGRAM SP
		ON D.IDPROGRAMA=SP.ID 
	JOIN TMP
		ON SP.NAZIV=TMP.SMER 
WHERE D.DATDIPLOMIRANJA IS NULL AND SP.IDNIVOA=2;


DELETE FROM STUDENT_MENTOR;

-- d
MERGE INTO STUDENT_MENTOR SM
USING (
	SELECT D.INDEKS, D.DATUPISA, MIN(M.INDEKS) MENTOR
	FROM DA.DOSIJE D JOIN DA.DOSIJE M
		ON D.IDPROGRAMA=M.IDPROGRAMA AND D.POL=M.POL
	WHERE D.DATDIPLOMIRANJA IS NULL AND M.DATDIPLOMIRANJA IS NOT NULL
	GROUP BY D.INDEKS, D.DATUPISA
) TMP
ON SM.STUDENT=TMP.INDEKS
WHEN MATCHED THEN
	UPDATE
	SET KOMENTAR = 'XX'
WHEN NOT MATCHED THEN
	INSERT (STUDENT, MENTOR, DATPOCETKA)
	VALUES (TMP.INDEKS, TMP.MENTOR , TMP.DATUPISA+7 DAYS);
	
	
MERGE INTO STUDENT_MENTOR SM
USING (
	SELECT D.INDEKS, D.DATUPISA, MIN(M.INDEKS) MENTOR
	FROM DA.DOSIJE D JOIN DA.DOSIJE M
		ON D.IDPROGRAMA=M.IDPROGRAMA AND D.MESTORODJENJA=M.MESTORODJENJA
	WHERE D.DATDIPLOMIRANJA IS NULL AND M.DATDIPLOMIRANJA IS NOT NULL
	GROUP BY D.INDEKS, D.DATUPISA
) TMP
ON SM.STUDENT=TMP.INDEKS
WHEN MATCHED THEN
	UPDATE
	SET KOMENTAR = 'XX'
WHEN NOT MATCHED THEN
	INSERT (STUDENT, MENTOR, DATPOCETKA)
	VALUES (TMP.INDEKS, TMP.MENTOR , TMP.DATUPISA - 7 DAYS);

-- e

DELETE FROM STUDENT_MENTOR
WHERE DATPOCETKA IS NULL OR DATPOCETKA < CURRENT DATE - 3 YEARS;

DELETE FROM STUDENT_MENTOR
WHERE KOMENTAR IS NULL OR KOMENTAR LIKE '%Astronomija%';

DROP TABLE STUDENT_MENTOR;
DROP FUNCTION GENERISI_KOMENTAR;
-- 3091