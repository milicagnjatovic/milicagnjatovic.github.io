{
    "zadaci":[
        {
            "z":"Napraviti tabelu TEST sa kolonama ID (ceo broj, primarni ključ) i SLOVO (karakter). Obezbediti da se vrednost ID automatski generiše ukoliko nije navedena. Zatim izvršavati stavke po redu: <ul><li>U datu tabelu uneti vrednost SLOVO='a'</li><li>U datu tabelu uneti vrednost ID=2, SLOVO='b'</li><li>U datu tabelu uneti vrednost SLOVO='c'</li></ul>",
            "r":[
                "CREATE TABLE TEST (<br><tab></tab>ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,<br><tab></tab>SLOVO CHAR <br>);<br><br>INSERT INTO TEST (SLOVO)<br><tab></tab>VALUES ('a');<br><tab></tab><br>INSERT INTO TEST (ID, SLOVO)<br><tab></tab>VALUES (2, 'b');<br><tab></tab><br>INSERT INTO TEST (SLOVO)<br><tab></tab>VALUES ('c');"
            ],
            "n": "Poslednji upit javlja grešku zato što baza čuva brojač koji će iskoristiti za ID ukoliko se ne navede. Kada ubacimo 'a' uneće se 1 za id, a brojač će se povećati na 2. Dalje unosimo 'b' i 2, brojač se ne menja jer smo id sami uneli. Zatim pokušavamo da unesemo 'c' bez id-a. Baza uzima brojač za id. Trenutna vrednost brojača je 2, međutim u bazi već postoji red sa id-em 2, pa zbog jedinstvenosti ključa dobijamo grešku. <br>Mogli smo da definišemo ...GENERATED BY DEFAULT AS IDENTITY (START WITH 100, INCREMENT BY 2), i onda znamo da će vrednosti id-eva koje ne navemo biti veće od 100 i parne."
        },
        {
            "z": "Za svakog studenta smera Informatika na osnovnim akademskim studijama, koji je fakultet upisao 2015. godine, pronaći koje obavezne predmete nije položio. Izdvojiti ime i prezime studeta i naziv predmeta.",
            "r":[
                "SELECT D.IME, D.PREZIME, P.NAZIV<br>FROM DA.DOSIJE D JOIN DA.STUDIJSKIPROGRAM SP<br><tab></tab><tab></tab>ON D.IDPROGRAMA = SP.ID <br><tab></tab>JOIN DA.NIVOKVALIFIKACIJE NK<br><tab></tab><tab></tab>ON SP.IDNIVOA = NK.ID<br><tab></tab>JOIN DA.PREDMETPROGRAMA PP<tab></tab><br><tab></tab><tab></tab>ON PP.IDPROGRAMA=D.IDPROGRAMA<br><tab></tab>JOIN DA.PREDMET P<br><tab></tab><tab></tab>ON P.ID=PP.IDPREDMETA<br>WHERE SP.NAZIV='Informatika' <br><tab></tab>AND NK.NAZIV='Osnovne akademske studije'<br><tab></tab>AND YEAR(DATUPISA)=2015<br><tab></tab>AND PP.VRSTA='obavezan'<br><tab></tab>AND NOT EXISTS (<br><tab></tab><tab></tab>SELECT *<br><tab></tab><tab></tab>FROM DA.ISPIT I<br><tab></tab><tab></tab>WHERE I.IDPREDMETA=P.ID <br><tab></tab><tab></tab><tab></tab>AND I.INDEKS=D.INDEKS<br><tab></tab><tab></tab><tab></tab>AND OCENA>5 AND STATUS='o'<br><tab></tab>);",
                "WITH OSOVNE_INFORMATIKA AS (<br><tab></tab><tab></tab>SELECT SP.ID IDPROGRAMA<br><tab></tab><tab></tab>FROM DA.STUDIJSKIPROGRAM SP JOIN DA.NIVOKVALIFIKACIJE NK<br><tab></tab><tab></tab><tab></tab><tab></tab>ON SP.IDNIVOA = NK.ID<br><tab></tab><tab></tab>WHERE SP.NAZIV='Informatika' <br><tab></tab><tab></tab><tab></tab>AND NK.NAZIV='Osnovne akademske studije'<br><tab></tab>),<br><tab></tab>STUDENTI_INFORMATIKE AS (<br><tab></tab><tab></tab>SELECT D.INDEKS, D.IME, D.PREZIME, D.IDPROGRAMA<br><tab></tab><tab></tab>FROM DA.DOSIJE D JOIN OSOVNE_INFORMATIKA OI<br><tab></tab><tab></tab><tab></tab>ON D.IDPROGRAMA = OI.IDPROGRAMA<br><tab></tab><tab></tab>WHERE YEAR(DATUPISA)=2015<br>)<br>SELECT D.IME, D.PREZIME, P.NAZIV<br>FROM STUDENTI_INFORMATIKE D JOIN DA.PREDMETPROGRAMA PP<tab></tab><br><tab></tab><tab></tab>ON PP.IDPROGRAMA=D.IDPROGRAMA<br><tab></tab>JOIN DA.PREDMET P<br><tab></tab><tab></tab>ON P.ID=PP.IDPREDMETA<br>WHERE PP.VRSTA='obavezan'<br><tab></tab>AND NOT EXISTS (<br><tab></tab><tab></tab>SELECT *<br><tab></tab><tab></tab>FROM DA.ISPIT I<br><tab></tab><tab></tab>WHERE I.IDPREDMETA=P.ID <br><tab></tab><tab></tab><tab></tab>AND I.INDEKS=D.INDEKS<br><tab></tab><tab></tab><tab></tab>AND OCENA>5 AND STATUS='o'<br><tab></tab>);"
            ]
        },
        {
            "z":"Napraviti pogled kojim se izdvajaju svi ispitni rokovi održani od 2018/2019. školske godine. A zatim odraditi sledeće:<ul><li>Uneti ispitni rok jan1 2022. godine u pogled.</li><li>Uneti u tabelu ispitnirok rok jan2 2022</li><li>U pogled uneti rok sa oznakom 'xxx' održan 2015-e godine.</li><li>Promeni oznaku roka xxx 2015 u kreiranom pogledu u 'test'.</li><li>Obrisati rok sa oznakom 'xxx' iz pogleda.</li><li>Obrisati ispitne rokove održane 2022 iz pogleda.</li><li>Obrisati pogled.</li></ul>",
            "r":[
                "CREATE VIEW ISPITNI_ROK_2018 AS<br>SELECT *<br>FROM DA.ISPITNIROK<br>WHERE SKGODINA>=2018;",
                "INSERT INTO ISPITNI_ROK_2018<br> VALUES (2022, 'jan1', 'test2022', current date - 30 days, current date);",
                "INSERT INTO DA.ISPITNIROK <br> VALUES (2022, 'jan2', 'test2022', current date - 30 days, current date);",
                "INSERT INTO ISPITNI_ROK_2018<br> VALUES (2015, 'xxx', 'test2022', current date - 30 days, current date);",
                "UPDATE ISPITNI_ROK_2018<br>SET OZNAKAROKA='test'<br>           WHERE SKGODINA=2015 AND OZNAKAROKA='xxx';",
                "DELETE FROM ISPITNI_ROK_2018<br>WHERE OZNAKAROKA='xxx'",
                "DELETE FROM ISPITNI_ROK_2018<br>  WHERE SKGODINA=2022",
                "DROP VIEW ISPITNI_ROK_2018;"
            ],
            "n": "Napomene: <br>Da bi mogli da ubacimo ispitni rok 2022 potrebno je da prvo u tabelu skolskih godina ubacimo tu skolsku godinu (zbog restrikcija stranog ključa): <p class=\"kod\">INSERT INTO DA.SKOLSKAGODINA<br>VALUES(2022, '1.10.2022', '30.9.2023');</p> Kada unesemo isitni rok 2022 u pogled on će biti unet u tabelu nad kojom je pogled. <br>Kada unesemo ispitni rok u tabelu on će se videti i iz pogleda.<br>Ako u pogled unesemo rok iz 2015 on se neće videti u pogledu, dok će biti unet u tabelu. <br>Brisanje ili menjanje roka iz 2015 preko pogleda neće uspeti jer ti rokovi nisu u pogledu već samo u tabeli.<br>Brisanje rokova iz pogleda ih briše i iz tabele."
        },
        {
            "z": "Napraviti pogled sa svim prijavljenim ispitima Marka Petrovića. A zatim svim ispitima iz pogleda staviti datum polaganja na null.",
            "r":[
                "CREATE VIEW ISPITI_MP AS<br>SELECT I.*<br>FROM DA.DOSIJE D JOIN ISPIT1 I<br><tab></tab>ON D.INDEKS=I.INDEKS<br>WHERE D.IME='Marko' AND D.PREZIME='Petrovic';",
                "UPDATE ISPITI_MP<br>SET DATPOLAGANJA=NULL;",
                "CREATE VIEW ISPITI_MP1 AS<br>SELECT *<br>FROM ISPIT1 I<br>WHERE EXISTS (<br><tab></tab>SELECT *<br><tab></tab>FROM DA.DOSIJE D<br><tab></tab>WHERE I.INDEKS=D.INDEKS AND<br><tab></tab><tab></tab>D.IME='Marko' AND D.PREZIME='Petrovic'<br>);",
                "UPDATE ISPITI_MP1<br>SET DATPOLAGANJA=NULL;"
            ],
            "n": "Radimo nad kopijom tabele ispit da ne bi menjali originalnu. <br>Pogled može da se menja jedino ako je nad samo jednom tabelom, nema spajanja. Zbog toga će pokušaj izmene prvog pogleda javiti grešku, dok će drugi da prođe."
        },
        {
            "z": "Napraviti pogled kojim se izdvajaju svi prijavljeni ispiti studenata koji se zovu Marko ili Marija, a u ispitnom roku jan1 2018/2019. šk. godine su položili barem jedan ispit. Pogled napisati tako da je kroz njega moguće dodavanje novih ispita koji zadovoljavaju uslove pogleda. Pokušati dodati sledeća dva reda:<ul><li>Marko: indeks 20150013, idpredmeta 2027, skgodina 2018, oznakaroka sep2, status o, 40 poena, ocena 5</li><li>Jovana: indeks 20150001, idpredmeta 2027, skgodina 2018, oznakaroka sep2, status o, 40 poena, ocena 5.</li></ul>Ukoliko neko ubacivanje ne uspe pokušati uneti red direktno u tabelu ispit. Za dva uneta reda pokušati izmenu datuma polaganja nad pogledom na današnji datum. Ukoliko izmena nad pogledom ne uspe odraditi je direktno na tabeli. Na kraju pokuati brisanje ova dva reda preko pogleda.",
            "r":[
                "CREATE VIEW ISPITI_M AS<br>SELECT I.*<br>FROM ISPIT1 I<br>WHERE INDEKS IN (<br><tab></tab><tab></tab>SELECT INDEKS<br><tab></tab><tab></tab>FROM DA.DOSIJE<br><tab></tab><tab></tab>WHERE IME IN ('Marko', 'Marija')<br><tab></tab>) <br><tab></tab>AND EXISTS(<br><tab></tab><tab></tab>SELECT *<br><tab></tab><tab></tab>FROM ISPIT1 I1<br><tab></tab><tab></tab>WHERE I.INDEKS=I1.INDEKS AND<br><tab></tab><tab></tab><tab></tab>SKGODINA=2018 AND<br><tab></tab><tab></tab><tab></tab>OZNAKAROKA='jan1' AND<br><tab></tab><tab></tab><tab></tab>OCENA>5 AND STATUS='o'<br><tab></tab>) WITH CHECK OPTION;",
                "INSERT INTO ISPITI_M(INDEKS, IDPREDMETA, SKGODINA, OZNAKAROKA, STATUS, POENI, OCENA)<br><tab></tab>VALUES(20150013, 2027, 2018, 'sep2', 'o', 40, 5);",
                "INSERT INTO ISPITI_M(INDEKS, IDPREDMETA, SKGODINA, OZNAKAROKA, STATUS, POENI, OCENA)<br><tab></tab>VALUES(20150001, 2027, 2018, 'sep2', 'o', 40, 5);",
                "INSERT INTO ISPIT1(INDEKS, IDPREDMETA, SKGODINA, OZNAKAROKA, STATUS, POENI, OCENA)<br><tab></tab>VALUES(20150001, 2027, 2018, 'sep2', 'o', 40, 5);",
                "UPDATE ISPITI_M<br>SET DATPOLAGANJA = CURRENT DATE<br>WHERE INDEKS=20150013 AND<br><tab></tab>IDPREDMETA=2027 AND<br><tab></tab>SKGODINA=2018 AND<br><tab></tab>OZNAKAROKA='sep2'",
                "UPDATE ISPITI_M<br>SET DATPOLAGANJA = CURRENT DATE<br>WHERE INDEKS=20150001 AND<br><tab></tab>IDPREDMETA=2027 AND<br><tab></tab>SKGODINA=2018 AND<br><tab></tab>OZNAKAROKA='sep2'",
                "UPDATE ISPIT1<br>SET DATPOLAGANJA = CURRENT DATE<br>WHERE INDEKS=20150001 AND<br><tab></tab>IDPREDMETA=2027 AND<br><tab></tab>SKGODINA=2018 AND<br><tab></tab>OZNAKAROKA='sep2';",
                "DELETE FROM ISPITI_M<br>WHERE INDEKS=20150013 AND<br><tab></tab>IDPREDMETA=2027 AND<br><tab></tab>SKGODINA=2018 AND<br><tab></tab>OZNAKAROKA='sep2';<br><tab></tab>",
                "DELETE FROM ISPITI_M<br>WHERE INDEKS=20150001 AND<br><tab></tab>IDPREDMETA=2027 AND<br><tab></tab>SKGODINA=2018 AND<br><tab></tab>OZNAKAROKA='sep2';",
                "DELETE FROM ISPIT1<br>WHERE INDEKS=20150001 AND<br><tab></tab>IDPREDMETA=2027 AND<br><tab></tab>SKGODINA=2018 AND<br><tab></tab>OZNAKAROKA='sep2';"
            ],
            "n": "Ukoliko pri pravljneju pogleda stavimo WITH CHECK opciju onda će preko pogleda biti moguće ubacivanje, menjanje i brisanje redova koji zadovoljavaju uslov pogleda."
        },
        {
            "z": " Napraviti indeks tabele dosije po imenu i prezimenu u opadajućem redosledu. Zatim ga obrisati. ",
            "r":[
                "CREATE INDEX DOSIJE_IME_PREZIME ON DA.DOSIJE<br><tab></tab>(IME DESC, PREZIME DESC);<br><tab></tab>",
                "DROP INDEX DOSIJE_IME_PREZIME;"
            ]
        } , 
        {
            "z": "Napisati korisnički definisanu funkciju koja vraća cenu predmeta za samofinansirajuće studente. Kao argument se zadaje broj espb. Cena jednog espb boda je 2000 dinara.",
            "r":[
                "CREATE FUNCTION CENA(ESPB SMALLINT)<br>RETURNS FLOAT<br>RETURN ESPB*2000.0;",
                "SELECT NAZIV, ESPB, CENA(ESPB)<br>FROM DA.PREDMET;"
            ]
        },
        {
            "z": "Napisati korisnički definisanu funkciju koja vraća cenu predmeta za samofinansirajuće studente. Kao argument se zadaje id predmeta. Cena jednog espb boda je 2000 dinara.",
            "r":[
                "CREATE FUNCTION CENA(IDPREDMETA SMALLINT)<br>RETURNS FLOAT<br>RETURN <br><tab></tab>SELECT ESPB*2000.0<br><tab></tab>FROM DA.PREDMET <br><tab></tab>WHERE ID = IDPREDMETA;",
                "VALUES CENA(1578);"
            ]
        },
        {
            "z": "Napisati korisnički definisnu funkciju koja vraća prosek studenta sa zadatim indekom. Zaokružiti prosek na dve decimale.",
            "r":[
                "CREATE FUNCTION PROSEK(INDEKS INTEGER)<br>RETURNS FLOAT<br>RETURN <br><tab></tab>SELECT DECIMAL(AVG(OCENA*1.0), 4, 2)<br><tab></tab>FROM DA.ISPIT I<br><tab></tab>WHERE I.INDEKS=INDEKS<br><tab></tab><tab></tab>AND OCENA>5 AND STATUS='o';",
                "SELECT INDEKS, IME, PREZIME, PROSEK(INDEKS)<br>FROM DA.DOSIJE;"
            ]
        },
        {
            "z": "Napisati korisnički definisanu funkciju koja vraća koji je danas dan. Vraća naziv dana u nedelju ukoliko je radni dan, inače vraća 'WEEKEND'.",
            "r":[
                "CREATE FUNCTION DANAS()<br>RETURNS VARCHAR(10)<br>RETURN <br><tab></tab>CASE <br><tab></tab><tab></tab>WHEN DAYOFWEEK(CURRENT DATE) IN (7, 1) THEN 'WEEKEND'<br><tab></tab><tab></tab>ELSE DAYNAME(CURRENT DATE)<br><tab></tab>END;",
                "SELECT DANAS()<br>FROM SYSIBM.SYSDUMMY1;"
            ]
        }
    ],
    "zadaciZaVezbanje":[
        "Napisati pogled koji izdvaja poslednji položeni ispit za svakog studenta koji ima prosek iznad 8. Izdvojiti indeks, ime i prezime studenta i datum polaganja poslednjeg ispita.",
        "Napisati pogled koji izdvaja podatke o studntima koji su bar jedan ispit položili sa ocenom 10. Pogled napisati tako da je kroz njega moguće dodavanje novih studenata. Izdvojiti samo kolone iz tabele dosije koje su neophodne da bi mogao da se izvrši unos podataka o novom studentu preko pogleda.",
        "Napisati korisnički definisanu funkciju koja za prosleđen indeks vraća inicijale studenta. Ukoliko ne postoji stuedent vratiti 'XX'.",
        "Napisati korisnički definisanu funkciju koja vraća broj različitih rokova u kojim je student sa prosleđenim indeksom položio neki ispit.",
        "Napisati korisnički definisanu funkciju koja vraća broj dana studiranja ako je student sa prosleđenim indeksom diplomirao, inače 0."
    ]
}